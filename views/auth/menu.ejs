<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menu | RS Mani Cafe</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        /* Body background color: top half white, bottom half yellow */
        body {
            background: linear-gradient(to bottom, #ffffff 50%, #f8b400 50%);
            color: #1f2937;
        }
        nav {
            background-color: #ffffff;
            padding: 15px;
            color: #4b2e20;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        nav .brand {
            font-size: 28px;
            font-weight: bold;
            color: #4b2e20;
        }
        nav .nav-links a {
            color: #4b2e20;
            margin-left: 20px;
            text-decoration: none;
            font-size: 16px;
            font-weight: bold;
        }
        nav .nav-links a:hover {
            color: #cc7400;
        }
        .container {
            background-color: #ffffff;
            border-radius: 10px;
            padding: 2rem;
            text-align: center;
            margin: 40px auto;
            max-width: 1000px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        h1, h3 {
            color: #4b2e20;
        }
        .btn {
            border-radius: 20px;
        }
        /* Custom styles for the layout */
        .menu-cart-container {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }
        .menu-section, .cart-section {
            flex: 1;
            background-color: #ffffff;
            padding: 1rem;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            max-width: 48%;
        }
        .cart-section {
            max-height: 500px;
            overflow-y: auto;
        }
        /* Styling for a balanced look on mobile devices */
        @media (max-width: 768px) {
            .menu-section, .cart-section {
                max-width: 100%;
            }
        }
    </style>
</head>
<body>
    <!-- Top Navigation Bar -->
    <nav>
        <div class="container d-flex justify-content-between align-items-center">
            <!-- Logo with Brand Name -->
            <div class="brand">
                <img src="/images/logo.jfif" alt="RS Mani Cafe Logo" style="width: 40px; height: 40px; margin-right: 10px; vertical-align: middle;">
                RS MANI CAFE
            </div>
            <div class="nav-links">
                <a href="/auth/dashboard">Home</a>
                <a href="/auth/logout">Logout</a>
            </div>
        </div>
    </nav>

    <div class="container my-5">
        <h1 class="text-center mb-4">Hello, <%= user.username %>! Enjoy your Meal:</h1>

        <div class="menu-cart-container">
            <!-- Menu Section -->
            <div class="menu-section">
                <h3>Menu</h3>
                <input type="text" class="form-control mb-3" id="menu-search" placeholder="Search for items...">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Add</th>
                            </tr>
                        </thead>
                        <tbody id="menu-items">
                            <% menuItems.forEach(item => { %>
                                <tr>
                                    <td><strong><%= item.name %></strong></td>
                                    <td>₹<%= item.price %></td>
                                    <td>
                                        <button class="btn btn-primary btn-sm add-to-cart-btn" data-id="<%= item._id %>" data-name="<%= item.name %>" data-price="<%= item.price %>">
                                            Add to Cart
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Cart Section -->
            <div class="cart-section">
                <h3>Your Cart</h3>
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>Item</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="cart-items">
                            <!-- Cart items will be dynamically inserted here -->
                        </tbody>
                    </table>
                </div>
                <h4 class="text-end mt-4">Grand Total: ₹<span id="grand-total">0.00</span></h4>
                <div class="d-flex justify-content-between mt-4">
                    <a href="/auth/dashboard/orders/cart/checkout" class="btn btn-success">Proceed to Checkout</a>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Function to add items to cart and store in session storage
        document.querySelectorAll('.add-to-cart-btn').forEach(button => {
            button.addEventListener('click', function () {
                const menuItemId = this.getAttribute('data-id');
                const itemName = this.getAttribute('data-name');
                const itemPrice = parseFloat(this.getAttribute('data-price'));

                let cart = JSON.parse(sessionStorage.getItem('cart')) || [];

                const existingItemIndex = cart.findIndex(item => item.menuItemId === menuItemId);
                if (existingItemIndex !== -1) {
                    cart[existingItemIndex].quantity += 1;
                } else {
                    cart.push({
                        menuItemId,
                        itemName,
                        itemPrice: isNaN(itemPrice) ? 0 : itemPrice,
                        quantity: 1
                    });
                }

                sessionStorage.setItem('cart', JSON.stringify(cart));
                displayCartItems();
            });
        });

        // Function to display cart items
        function displayCartItems() {
            const cart = JSON.parse(sessionStorage.getItem('cart')) || [];
            const cartItemsContainer = document.getElementById('cart-items');
            const grandTotalContainer = document.getElementById('grand-total');
            cartItemsContainer.innerHTML = '';

            let grandTotal = 0;

            if (cart.length === 0) {
                cartItemsContainer.innerHTML = '<tr><td colspan="5" class="text-center">No items in the cart.</td></tr>';
                grandTotalContainer.textContent = "0.00";
                return;
            }

            cart.forEach((item, index) => {
                const itemTotal = item.itemPrice * item.quantity;
                grandTotal += itemTotal;

                const row = document.createElement('tr');
                row.innerHTML = `
                    <td><strong>${item.itemName}</strong></td>
                    <td>₹${item.itemPrice.toFixed(2)}</td>
                    <td>
                        <button class="btn btn-sm btn-outline-secondary decrease-qty" data-index="${index}">-</button>
                        <span class="mx-2">${item.quantity}</span>
                        <button class="btn btn-sm btn-outline-secondary increase-qty" data-index="${index}">+</button>
                    </td>
                    <td>₹${itemTotal.toFixed(2)}</td>
                    <td>
                        <button class="btn btn-sm btn-danger remove-item" data-index="${index}">Remove</button>
                    </td>
                `;
                cartItemsContainer.appendChild(row);
            });

            grandTotalContainer.textContent = grandTotal.toFixed(2);
            addCartEditFunctionality();
        }

        // Function to edit cart items
        function addCartEditFunctionality() {
            const cart = JSON.parse(sessionStorage.getItem('cart')) || [];

            document.querySelectorAll('.increase-qty').forEach(button => {
                button.addEventListener('click', function () {
                    const index = this.getAttribute('data-index');
                    cart[index].quantity += 1;
                    sessionStorage.setItem('cart', JSON.stringify(cart));
                    displayCartItems();
                });
            });

            document.querySelectorAll('.decrease-qty').forEach(button => {
                button.addEventListener('click', function () {
                    const index = this.getAttribute('data-index');
                    if (cart[index].quantity > 1) {
                        cart[index].quantity -= 1;
                        sessionStorage.setItem('cart', JSON.stringify(cart));
                        displayCartItems();
                    } else {
                        alert("Quantity can't be less than 1");
                    }
                });
            });

            document.querySelectorAll('.remove-item').forEach(button => {
                button.addEventListener('click', function () {
                    const index = this.getAttribute('data-index');
                    cart.splice(index, 1);
                    sessionStorage.setItem('cart', JSON.stringify(cart));
                    displayCartItems();
                });
            });
        }

        // Display cart items on page load
        window.addEventListener('DOMContentLoaded', displayCartItems);

        // Filter menu items based on search input
        document.getElementById('menu-search').addEventListener('input', function () {
            const searchText = this.value.toLowerCase();
            const menuRows = document.querySelectorAll('#menu-items tr');

            menuRows.forEach(row => {
                const itemName = row.querySelector('td strong').textContent.toLowerCase();
                if (itemName.includes(searchText)) {
                    row.style.display = ''; // Show row
                } else {
                    row.style.display = 'none'; // Hide row
                }
            });
        });
    </script>
</body>
</html>
