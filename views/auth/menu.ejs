<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Menu</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css"> <!-- Link to your CSS file if applicable -->
</head>
<body>
    <div class="container my-5">
        <h1 class="text-center mb-4">Welcome, <%= user.username %>! Here is our Menu:</h1>

        <div class="row mb-4">
            <% menuItems.forEach(item => { %>
                <div class="col-md-4 mb-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h5 class="card-title"><strong><%= item.name %></strong></h5>
                            <h6 class="card-subtitle mb-2 text-muted">₹<%= item.price %></h6>
                            <p class="card-text"><em><%= item.description %></em></p>
                            <button class="btn btn-primary add-to-cart-btn" data-id="<%= item._id %>" data-name="<%= item.name %>" data-price="<%= item.price %>">Add to Cart</button>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>

        <div class="d-flex justify-content-between mb-4">
            <a href="/auth/dashboard/cart" class="btn btn-secondary">Your Cart</a>
            <a href="/auth/logout" class="btn btn-danger">Logout</a>
        </div>

        <h2>Your Cart</h2>
        <ul id="cart-items" class="list-group mb-4">
            <!-- Cart items will be dynamically inserted here -->
        </ul>
    </div>

    <script>
        // Function to add items to cart and store in session storage
        document.querySelectorAll('.add-to-cart-btn').forEach(button => {
            button.addEventListener('click', function () {
                const menuItemId = this.getAttribute('data-id'); // Get the menu item ID
                const itemName = this.getAttribute('data-name'); // Get the menu item name
                const itemPrice = parseFloat(this.getAttribute('data-price')); // Get the menu item price

                // Get current cart from session storage
                let cart = JSON.parse(sessionStorage.getItem('cart')) || [];

                // Check if the item is already in the cart
                const existingItemIndex = cart.findIndex(item => item.menuItemId === menuItemId);
                if (existingItemIndex !== -1) {
                    // Item already in cart, increase quantity
                    cart[existingItemIndex].quantity += 1;
                } else {
                    // Add new item to cart
                    cart.push({
                        menuItemId,
                        itemName,
                        itemPrice,
                        quantity: 1
                    });
                }

                // Store the updated cart in session storage
                sessionStorage.setItem('cart', JSON.stringify(cart));

                // Update the cart UI
                displayCartItems();
            });
        });

        // Function to display cart items from session storage
        function displayCartItems() {
            const cart = JSON.parse(sessionStorage.getItem('cart')) || [];
            const cartItemsContainer = document.getElementById('cart-items');
            cartItemsContainer.innerHTML = ''; // Clear existing items

            cart.forEach((item, index) => {
                const li = document.createElement('li');
                li.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');
                li.innerHTML = `
                    ${item.itemName} - ₹${item.itemPrice} (Quantity: ${item.quantity}) 
                    <div>
                        <button class="btn btn-link increase-qty" data-index="${index}">+</button>
                        <button class="btn btn-link decrease-qty" data-index="${index}">-</button>
                        <button class="btn btn-danger remove-item" data-index="${index}">Remove</button>
                    </div>
                `;
                cartItemsContainer.appendChild(li);
            });

            // Add event listeners for editing cart items
            addCartEditListeners();
        }

        // Function to add listeners for cart edits (increase, decrease, remove)
        function addCartEditListeners() {
            const cart = JSON.parse(sessionStorage.getItem('cart')) || [];

            // Increase quantity
            document.querySelectorAll('.increase-qty').forEach(button => {
                button.addEventListener('click', function () {
                    const index = this.getAttribute('data-index');
                    cart[index].quantity += 1;
                    sessionStorage.setItem('cart', JSON.stringify(cart));
                    displayCartItems();
                });
            });

            // Decrease quantity
            document.querySelectorAll('.decrease-qty').forEach(button => {
                button.addEventListener('click', function () {
                    const index = this.getAttribute('data-index');
                    if (cart[index].quantity > 1) {
                        cart[index].quantity -= 1;
                    } else {
                        alert("Quantity can't be less than 1");
                    }
                    sessionStorage.setItem('cart', JSON.stringify(cart));
                    displayCartItems();
                });
            });

            // Remove item from cart
            document.querySelectorAll('.remove-item').forEach(button => {
                button.addEventListener('click', function () {
                    const index = this.getAttribute('data-index');
                    cart.splice(index, 1); // Remove item from cart
                    sessionStorage.setItem('cart', JSON.stringify(cart));
                    displayCartItems();
                });
            });
        }

        // Display cart items on page load
        window.onload = displayCartItems;
    </script>
</body>
</html>
